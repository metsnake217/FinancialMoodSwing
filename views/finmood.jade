    
extends layoutmood

block content

    div(class="container", style="/*min-height: 634px;*/")
        //a(href="/mood")
            //img(src="/images/spot.png" width="5%", class="logofin1")
        //a(href="/login")
            //img(src="/images/test1.png" class="logofin")
        //div(class="checkboxThree")
                        //input(type="checkbox" name="manualprog" id="manualprog" value="prog" checked)
                        //label(for="manualprog" class="labelcheck shadow")
        div(class="finmood")
            h1(style="font-size: 40px;")!= "Ticker Swing"
            p(style="padding-bottom: 10px;")!= "Select a stock option to set the mood."
            form(id="playlistedit-form")
                div(id="playlistedit")
                    script(id="playlistedit-template" type="text/x-handlebars-template")
                        <select name="playeditmoodfin" type="text" id="playeditmoodfin" class="form-control form-controlfin quoteBubble shadow" style="text-align: center;margin: 0 auto;text-align-last: center;" placeholder="Select Portfolio">
                        <option value="select portfolio">Portfolios</option><option value="all">All</option>{{#each this}}<option value="{{symbol}}">{{name}}</option>{{/each}}</select>
                        <span class="fa fa-sort selectarrow"></span>
            div(id="stock" style="display:none;margin-top: 30px")
                    script(id="stock-template" type="text/x-handlebars-template")
                        <span style="font-size: 18pt;margin-right:10px"><!--<span style="color: #00bc00;">stock: </span>-->{{index}}<span style="font-size:8pt">{{desc}}</span><span class="{{getClass diff}}">{{getClassInt diff}}</span><br/><img src="/images/fin{{mood}}.png" width="40px" height="40px" style="margin-top: 25px"/><br/><br/><img src="/images/vol{{mood}}.gif" trackurl="{{url}}" width="100px" height="45px" class="stocknotefin animated zoomInUp /* tada infinite*/" style="/*top: 10px; position: relative;*/"/></span><!--<div id="player" style="position: absolute; top: -9999px; left: -9999px;"></div>-->
            div(id="stocknodata" style="display:none;margin-top: 30px")
                    
        br(style="clear: both;")

    script.
        Handlebars.registerHelper('getWidth', function(passedString) {
        console.log("before getWidth");
            var widthString = "30px";
            if(passedString == "mode_waydown" || passedString == "mode_wayup"){
                widthString = "20px";
            } 
            console.log("widthString is: " + widthString);
            return new Handlebars.SafeString(widthString)
        });
        Handlebars.registerHelper('getClass', function(passedString) {
        console.log("before getWidth");
            var intstring = passedString;
            var classname = "tickerpos";
            var op = "+ ";
            if(intstring < 0){
               classname = "tickerneg";
               
            }
            console.log("intstring is: " + intstring);
            return new Handlebars.SafeString(classname)
        });
        Handlebars.registerHelper('getClassInt', function(passedString) {
        console.log("before getWidth");
            var intstring = passedString;
            var op = "+ ";
            if(intstring < 0){
               intstring = intstring * -1;
               op = "- ";
            }
            intstring = op + intstring;
            console.log("intstring is: " + intstring);
            return new Handlebars.SafeString(intstring)
        });
        var bearer = "Bearer " + "#{access_token}";
        var user;
        var playList = [];
        var templateSourceplayedit = document.getElementById('playlistedit-template').innerHTML,
            templateedit = Handlebars.compile(templateSourceplayedit),
            editPlaceholder = document.getElementById('playlistedit');
        var templateSourceStock = document.getElementById('stock-template').innerHTML,
            templatestock = Handlebars.compile(templateSourceStock),
            stockPlaceholder = document.getElementById('stock');

        var audioObject;

        var searchPlaylists = function () {
            var player;
            console.log("looking for playlists");
            console.log("access token in playlists: " + bearer);
            $.ajax({
                //url: 'https://api.spotify.com/v1/me/playlists',
                url: 'https://financialmoodswing.herokuapp.com/stocksfetch',
                headers: {'Access-Control-Allow-Origin': '*','Access-Control-Allow-Methods': 'POST,GET,PUT,DELETE','Access-Control-Allow-Headers': 'Authorization, Lang'},
                success: function (response) {
                    editPlaceholder.innerHTML = templateedit(response.res);
                    console.log("success get portfolio.");

                    $('#playeditmoodfin option').each(function()
                    {
                        var myStr = $(this).text();
                        console.log("here: " + myStr);
                        if(myStr.length > 12){$(this).text(myStr.substring(0,12) + "..");}
                    });

                    /*

                    $('#playeditmoodfin option').each(function()
                    {
                        var myStr = $(this).text();
                        if(myStr.length > 12){
                           myStr = myStr.substring(0,12) + "..";
                        }
                        var l = myStr.length;
                        var s = 14 - l;
                        console.log("here s: " + s);
                        var w = "";
                        for(var i=0; i < s/2; i++){
                            w = " " + w;
                        }
                        myStr = w + myStr + w;
                        console.log("here: " + myStr);
                        console.log("here length: " + myStr.length);
                        $(this).text(myStr);
                    });

                    */

                    console.dir(response.res);
                    $( "#playeditmoodfin" ).change(function() {

                        var prog = 0;
                        var check = $("#manualprog:checked").val();
                        console.log("check is: " + check);
                        if(check == undefined){
                            prog = 1;
                        }
                        
                        if(audioObject){
                        audioObject.pause();
                        }

                        
                            /*var myStr = $(this).text();
                            console.log("here: " + myStr);
                            if(myStr.length > 14){myStr = $(this).text(myStr.substring(14) + "...");}
                            */

                        var playlistid = $(this).val();
                        var playstr = "'" + playlistid + "'";
                        console.log("stock symbol: " + playlistid);
                        var listname = "test2";//$("#playeditmoodfin option[value=" + playstr + "]").text();
                        console.log("listname: " + listname);
                        if(listname !="Select Portfolio"){

                        $.ajax({
                            url: 'https://financialmoodswing.herokuapp.com/stockfetchfinmood',
                            headers: {'Access-Control-Allow-Origin': '*','Access-Control-Allow-Methods': 'POST,GET,PUT,DELETE','Access-Control-Allow-Headers': 'Authorization, Lang'},
                            data: {playlistname: listname, prog: prog, stocksymbol: playlistid},
                            success: function (response) {
                            console.log("response nodata?: " + response);
                            console.dir(response);
                                if(response != "nodata"){
                                stockPlaceholder.innerHTML = templatestock(response);
                                $("#stocknodata").hide();
                                $("#stock").show();
                                console.log("success got stocks: " + response);
                                console.dir(response);
                                var preview = response.url;
                                var youtubeid = response.youtube;
                                $("#stocknotefin").show();

                                var info = document.getElementById('info');

                                $(window).scrollTop($('#stock').offset().top).scrollLeft($('#stock').offset().left);
                                audioObject = new Audio(preview);
                                audioObject.play();
                                console.dir(audioObject);

                                audioObject.onpause=function(){
                                console.log("audio paused");
                                $(".stocknotefin").hide();
                                //$("#stock").css("margin-top","55px");
                                };
                                $( ".stocknotefin" ).click(function() {
                                    //if(audioObject){
                                    //    audioObject.pause();
                                   // }
                                    //$("#playeditmoodfin").val("select playlist");
                                    //$( ".stocknotefin" ).removeClass("lightSpeedIn");
                                    //$( ".stocknotefin" ).addClass("lightSpeedOut");
                                    //$( ".stocknotefin" ).hide();

                                });
                                $( ".stocknotefin" ).click(function() {

                                    if(audioObject.paused){
                                        audioObject.play();
                                    } else {
                                        audioObject.pause();
                                        $( ".stocknotefin" ).hide();
                                        $("#playeditmoodfin").val("select portfolio");
                                    }
                                    //$("#playeditmoodfin").val("select playlist");
                                    //$( ".stocknotefin" ).removeClass("lightSpeedIn");
                                    //$( ".stocknotefin" ).addClass("lightSpeedOut");
                                    

                                });

                                //function onYouTubePlayerAPIReady() {
                                /*    console.log("youtube player");
                                   player = new YT.Player('player', {
                                      videoId: youtubeid,
                                      loop: false,
                                      autoplay:true,
                                      playsinline: 1,
                                      events: {
                                          onReady: function (e) {
                                            console.log("now playing");
                                              
                                              e.target.playVideo();
                                          },
                                          onStateChange: function (event) {
                                              if (event.data === 1) {
                                                console.log("started");
                                                 playing';
                                              }
                                          }
                                      }
                                  });*/

                                  // you can do more stuff with the player variable
                                 /* $( ".stocknotefin" ).click(function() {
                                  console.log("player state: " + player.getPlayerState());
                                    if(player.getPlayerState() == YT.PlayerState.PLAYING){
                                        player.stopVideo();
                                        console.log("now stopping video");
                                        $( ".stocknotefin" ).hide();
                                        $("#playeditmoodfin").val("select playlist");
                                    } else if(player.getPlayerState() == YT.PlayerState.BUFFERING){
                                        player.playVideo();
                                    } else{
                                        player.playVideo();
                                    }
                                  });*/
                                //}

                            } else {
                                $("#stock").hide();
                                $("#stocknodata").show();
                                $("#stocknodata").html("No data could be fetched for this stock option.");
                            }

                            }
                        });
                        } else {
                        $("#stock").hide();

                        }
                    });
                }
            });
        };
        searchPlaylists();

        function isPlaying(audelem) { return !audelem.paused; }


