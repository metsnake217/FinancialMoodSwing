    
extends layout

block content

    div(class="container", style="")
        img(src="/images/unknown.png" width="5%", style="position: relative;left: 63.5%;top: 10px;")
        img(src="/images/test1.png" width="40%", height="15%", style="text-align: center; margin: 0 auto; display: block;")
        input(id="toggle" type="checkbox" class="inputexpand")
        label(for="toggle", class="labelexpand")!= "Create Playlist"
        div(id="expand")
            section
                //h1!= "Create a Playlist"
                p!= "Type a playlist name and click on 'Create'."
                form(id="playlist-form")
                    input(type="text" id="queryplay" value="" class="form-control" placeholder="Type Playlist title")
                    input(type="submit" id="createplaylist" class="btn btn-primary boutton" value="Create")

        input(id="toggleedit" type="checkbox" class="inputexpandedit")
        label(for="toggleedit", class="labelexpandedit")!= "Edit Playlist"
        div(id="expandedit")
            section
                //h1!= "Edit a Playlist"
                p!= "Select a playlist to load its contents."
                form(id="playlistedit-form")
                    div(id="playlistedit")
                        script(id="playlistedit-template" type="text/x-handlebars-template")
                            <select name="playedit" type="text" id="playedit" class="form-control" style="border-color:#3d9dcb;margin-bottom:10px" placeholder="Select Playlist">
                            <option value="select playlist">Select Playlist</option>
                            {{#each items}}
                            <option value="{{id}}">{{name}}</option>
                            {{/each}}
                            </select>
                    input(type="submit" id="editplaylist" class="btn btn-primary boutton" value="Edit")
        input(id="toggleadd" type="checkbox" class="inputexpandadd")
        label(for="toggleadd", class="labelexpandadd")!= "Add Music"
        div(id="expandadd")
            section
                //h1!= "Add Music"
                p!= "Type an artist name, album or track title. Then, select an existing playlist to add music to based on the metadata provided."
                form(id="search-form")
                    input(style="padding: 10px;height: 60px;font-size: 20pt;" type="text" id="query" value="" class="form-control" placeholder="Type an Artist Name")
                    input(type="submit" id="searchmusic" class="btn btn-primary searchmusic boutton" value="Search")
                
                form(id="playlistfill-form")
                    div(id="playlistres")
                        script(id="playlistres-template" type="text/x-handlebars-template")
                            <p style="margin-top:50px">Select an existing Playlist below and make a wise decision about the music tracks you would want to associate. Then click on "Add to Playlist" button.</p>
                            <select name="playSelect" type="text" id="playSelect" class="form-control" style="border-color:#3d9dcb;margin-bottom: 50px; width: 50%; height: 50px; font-size: 15pt;" placeholder="Select Playlist">
                            <option value="select playlist">Select Playlist</option>
                            {{#each items}}
                            <option value="{{id}}">{{name}}</option>
                            {{/each}}
                            </select>
                    div(id="resultsss")
                        script(id="results-template" type="text/x-handlebars-template")
                            <div class="sectionalbums"><h1>Pick Albums</h1>
                            {{#each albums.items}}
                            <div style="/*background-image:url({{images.0.url}})*/" data-album-id="{{id}}" class="covering">{{#if images.0.url}}<img data-album-id="{{id}}" src="{{images.0.url}}" width="100px" height="100px" class="cover"/>{{else}}<img data-album-id="{{id}}" src="/images/unknown.png" width="100px" height="100px" class="cover"/>{{/if}}<div><span class="wrap">{{trimString name}}</span></div><div style="display:block;text-align:ccenter;margin:0 auto;"><div style="" class="checkboxThree1"><input style="position:absolute;left: -9999px;" type="checkbox" id="moodup-{{id}}" name="moodup-{{id}}" value="moodup" checked="checked" class="mood"><label for="moodup-{{id}}" class="labelcheck1 shadow"></label></div><div style="" class="checkboxThree2"><input style="position:absolute;left: -9999px;" type="checkbox" id="moodwayup-{{id}}" name="moodwayup-{{id}}" value="moodwayup" checked="checked" class="mood"><label for="moodwayup-{{id}}" class="labelcheck2 shadow"></label></div><div style="" class="checkboxThree3"><input style="position:absolute;left: -9999px;" type="checkbox" id="mooddown-{{id}}" name="mooddown-{{id}}" value="mooddown" checked="checked" class="mood"><label for="mooddown-{{id}}" class="labelcheck3 shadow"></label></div><div style="" class="checkboxThree4"><input style="position:absolute;left: -9999px;" type="checkbox" id="moodwaydown-{{id}}" name="moodwaydown-{{id}}" value="moodwaydown" checked="checked" class="mood"><label for="moodwaydown-{{id}}" class="labelcheck4 shadow"></label></div></div></div>
                            {{/each}}
                            </div>
                            <div class="sectionartists" style="position: relative; float: left;margin-top: 200px;"><h1>Pick Artists</h1>
                            {{#each artists.items}}
                            <div style="/*background-image:url({{images.0.url}})*/" data-album-id="{{id}}" class="covering">{{#if images.0.url}}<img data-album-id="{{id}}" src="{{images.0.url}}" width="100px" height="100px" class="cover"/>{{else}}<img data-album-id="{{id}}" src="/images/unknown.png" width="100px" height="100px" class="cover"/>{{/if}}<div><span class="wrap">{{trimString name}}</span><!--<input type="checkbox" name="add" value="{{id}}" class="add" />--></div><div style="display:block;text-align:center;margin:0 auto;"><div style="" class="checkboxThree1"><input style="position:absolute;left: -9999px;" type="checkbox" id="moodup-{{id}}" name="moodup-{{id}}" value="moodup" checked="checked" class="mood"><label for="moodup-{{id}}" class="labelcheck1 shadow"></label></div><div style="" class="checkboxThree2"><input style="position:absolute;left: -9999px;" type="checkbox" id="moodwayup-{{id}}" name="moodwayup-{{id}}" value="moodwayup" checked="checked" class="mood"><label for="moodwayup-{{id}}" class="labelcheck2 shadow"></label></div><div style="" class="checkboxThree3"><input style="position:absolute;left: -9999px;" type="checkbox" id="mooddown-{{id}}" name="mooddown-{{id}}" value="mooddown" checked="checked" class="mood"><label for="mooddown-{{id}}" class="labelcheck3 shadow"></label></div><div style="" class="checkboxThree4"><input style="position:absolute;left: -9999px;" type="checkbox" id="moodwaydown-{{id}}" name="moodwaydown-{{id}}" value="moodwaydown" checked="checked" class="mood"><label for="moodwaydown-{{id}}" class="labelcheck4 shadow"></label></div></div></div>
                            {{/each}}
                            </div>
                            <div class="sectiontracks" style="position: relative; float: right;"><h1>Pick Tracks</h1>
                            {{#each tracks.items}}
                            <div data-track-id="{{id}}" class="covering" id="{{id}}">{{#if album.images.0.url}}<img data-album-id="{{id}}" src="{{album.images.0.url}}" width="100px" height="100px" class="cover"/>{{else}}<img data-album-id="{{id}}" src="/images/unknown.png" width="100px" height="100px" class="cover"/>{{/if}}<div><span class="wrap">{{trimString name}}</span><span class="tooltip2"><span class="fa fa-cog"></span><span id="title-{{id}}" data-tooltip="tooltip" class="tooltiptext" title=""></span></span></div><div style="display:block;text-align:ccenter;margin:0 auto;top: -20px; position: relative;"><div style="" class="checkboxThree1"><input style="position:absolute;left: -9999px;" type="checkbox" id="moodup-{{id}}" name="moodup-{{id}}" value="moodup" checked="checked" class="mood"><label for="moodup-{{id}}" class="labelcheck1 shadow"></label></div><div style="" class="checkboxThree2"><input style="position:absolute;left: -9999px;" type="checkbox" id="moodwayup-{{id}}" name="moodwayup-{{id}}" value="moodwayup" checked="checked" class="mood"><label for="moodwayup-{{id}}" class="labelcheck2 shadow"></label></div><div style="" class="checkboxThree3"><input style="position:absolute;left: -9999px;" type="checkbox" id="mooddown-{{id}}" name="mooddown-{{id}}" value="mooddown" checked="checked" class="mood"><label for="mooddown-{{id}}" class="labelcheck3 shadow"></label></div><div style="" class="checkboxThree4"><input style="position:absolute;left: -9999px;" type="checkbox" id="moodwaydown-{{id}}" name="moodwaydown-{{id}}" value="moodwaydown" checked="checked" class="mood"><label for="moodwaydown-{{id}}" class="labelcheck4 shadow"></label></div></div></div>
                            {{/each}}
                            </div>
                            <div style="position: relative;float: left;top: -35px;left: 37.5%;"><input type="submit" style="margin: 0 auto;" id="addtoplaylist" class="btn btn-primary boutton" value="Add to Playlist"/></div>
        
        input(id="togglerules" type="checkbox" class="inputexpandrules")
        label(for="togglerules", class="labelexpandrules")!= "Edit Rules"
        div(id="expandrules")
            section
                p!= "Set up the business rules for the stock market."
                form(id="playlistrules-form")
                    div(id="rulesup" style="position: relative; float: right;")
                        h2(style="color: #00bc00 !important;")!="Up"
                        div(class="range-slider")!="Acousticness"
                            input(class="range-slider__range" type="range" value="100" min="0" max="100" id="acousticup" name="acousticup")
                            span(class="range-slider__value")!= "0"
                        div(class="range-slider")!="Danceability"
                          input(class="range-slider__range" type="range" value="50" min="0" max="100" step="10" id="danceup" name="danceup")
                          span(class="range-slider__value")!="0"
                        div(class="range-slider")!="Energy"
                          input(class="range-slider__range" type="range" value="50" min="0" max="100" id="energyup" name="energyup")
                          span(class="range-slider__value")!="0"
                        div(class="range-slider")!="Key"
                            select(name="keyup" type="text" id="keyup" class="form-control" style="border-color:#3d9dcb;margin-bottom:10px" placeholder="Select")
                                option(value="select key")!="None"
                                option(value="1")!="1"
                                option(value="2")!="2"
                                option(value="3")!="3"
                                option(value="4")!="4"
                                option(value="5")!="5"
                                option(value="6")!="6"
                                option(value="7")!="7"
                                option(value="8")!="8"
                                option(value="9")!="9"
                                option(value="10")!="10"
                                option(value="11")!="11"
                        div(class="range-slider")!="Liveness"
                          input(class="range-slider__range" type="range" value="50" min="0" max="100" id="liveup" name="liveup")
                          span(class="range-slider__value")!="0"
                        div(class="range-slider")!="Mode"
                            select(name="modeup" type="text" id="modeup" class="form-control" style="border-color:#3d9dcb;margin-bottom:10px" placeholder="Select")
                                option(value="select playlist")!="None"
                                option(value="2oCyYrRD8DY0j1ZAqYumCb")!="Minor"
                                option(value="4LWi7L69VzdLavE6TgQcm9")!="Major"
                        div(class="range-slider")!="Speechiness"
                          input(class="range-slider__range" type="range" value="40" min="0" max="100" id="speechup" name="speechup")
                          span(class="range-slider__value")!="0"
                        div(class="range-slider")!="Valence"
                          input(class="range-slider__range" type="range" value="40" min="0" max="100" id="valenceup" name="valenceup")
                          span(class="range-slider__value")!="0"

                    div(id="ruleswayup" style="position: relative; float: right;margin-top:50px")
                        h2(style="color: #00bc00 !important;")!="Way Up"
                        div(class="range-slider")!="Acousticness"
                            input(class="range-slider__range" type="range" value="100" min="0" max="100" id="acousticwayup" name="acousticwayup")
                            span(class="range-slider__value")!= "0"
                        div(class="range-slider")!="Danceability"
                          input(class="range-slider__range" type="range" value="50" min="0" max="100" step="10" id="dancewayup" name="dancewayup")
                          span(class="range-slider__value")!="0"
                        div(class="range-slider")!="Energy"
                          input(class="range-slider__range" type="range" value="50" min="0" max="100" id="energywayup" name="energywayup")
                          span(class="range-slider__value")!="0"
                        div(class="range-slider")!="Key"
                            select(name="keywayup" type="text" id="keywayup" class="form-control" style="border-color:#3d9dcb;margin-bottom:10px" placeholder="Select")
                                option(value="select key")!="None"
                                option(value="1")!="1"
                                option(value="2")!="2"
                                option(value="3")!="3"
                                option(value="4")!="4"
                                option(value="5")!="5"
                                option(value="6")!="6"
                                option(value="7")!="7"
                                option(value="8")!="8"
                                option(value="9")!="9"
                                option(value="10")!="10"
                                option(value="11")!="11"
                        div(class="range-slider")!="Liveness"
                          input(class="range-slider__range" type="range" value="50" min="0" max="100" id="livewayup" name="livewayup")
                          span(class="range-slider__value")!="0"
                        div(class="range-slider")!="Mode"
                            select(name="modewayup" type="text" id="modewayup" class="form-control" style="border-color:#3d9dcb;margin-bottom:10px" placeholder="Select")
                                option(value="select playlist")!="None"
                                option(value="2oCyYrRD8DY0j1ZAqYumCb")!="Minor"
                                option(value="4LWi7L69VzdLavE6TgQcm9")!="Major"
                        div(class="range-slider")!="Speechiness"
                          input(class="range-slider__range" type="range" value="40" min="0" max="100" id="speechwayup" name="speechwayup")
                          span(class="range-slider__value")!="0"
                        div(class="range-slider")!="Valence"
                          input(class="range-slider__range" type="range" value="40" min="0" max="100" id="valencewayup" name="valencewayup")
                          span(class="range-slider__value")!="0"

                    div(id="rulesdown" style="position: relative; float: right;margin-top:50px")
                        h2(style="color: #00bc00 !important;")!="Down"
                        div(class="range-slider")!="Acousticness"
                            input(class="range-slider__range" type="range" value="100" min="0" max="100" id="acousticdown" name="acousticdown")
                            span(class="range-slider__value")!= "0"
                        div(class="range-slider")!="Danceability"
                          input(class="range-slider__range" type="range" value="50" min="0" max="100" step="10" id="dancedown" name="dancedown")
                          span(class="range-slider__value")!="0"
                        div(class="range-slider")!="Energy"
                          input(class="range-slider__range" type="range" value="50" min="0" max="100" id="energydown" name="energydown")
                          span(class="range-slider__value")!="0"
                        div(class="range-slider")!="Key"
                            select(name="keydown" type="text" id="keydown" class="form-control" style="border-color:#3d9dcb;margin-bottom:10px" placeholder="Select")
                                option(value="select key")!="None"
                                option(value="1")!="1"
                                option(value="2")!="2"
                                option(value="3")!="3"
                                option(value="4")!="4"
                                option(value="5")!="5"
                                option(value="6")!="6"
                                option(value="7")!="7"
                                option(value="8")!="8"
                                option(value="9")!="9"
                                option(value="10")!="10"
                                option(value="11")!="11"
                        div(class="range-slider")!="Liveness"
                          input(class="range-slider__range" type="range" value="50" min="0" max="100" id="livedown" name="livedown")
                          span(class="range-slider__value")!="0"
                        div(class="range-slider")!="Mode"
                            select(name="modedown" type="text" id="modedown" class="form-control" style="border-color:#3d9dcb;margin-bottom:10px" placeholder="Select")
                                option(value="select playlist")!="None"
                                option(value="2oCyYrRD8DY0j1ZAqYumCb")!="Minor"
                                option(value="4LWi7L69VzdLavE6TgQcm9")!="Major"
                        div(class="range-slider")!="Speechiness"
                          input(class="range-slider__range" type="range" value="40" min="0" max="100" id="speechdown" name="speechdown")
                          span(class="range-slider__value")!="0"
                        div(class="range-slider")!="Valence"
                          input(class="range-slider__range" type="range" value="40" min="0" max="100" id="valencedown" name="valencedown")
                          span(class="range-slider__value")!="0"

                    div(id="ruleswaydown" style="position: relative; float: right;margin-top:50px")
                        h2(style="color: #00bc00 !important;")!="Way Down"
                        div(class="range-slider")!="Acousticness"
                            input(class="range-slider__range" type="range" value="100" min="0" max="100" id="acousticwaydown" name="acousticwaydown")
                            span(class="range-slider__value")!= "0"
                        div(class="range-slider")!="Danceability"
                          input(class="range-slider__range" type="range" value="50" min="0" max="100" step="10" id="dancewaydown" name="dancedwayown")
                          span(class="range-slider__value")!="0"
                        div(class="range-slider")!="Energy"
                          input(class="range-slider__range" type="range" value="50" min="0" max="100" id="energywaydown" name="energywaydown")
                          span(class="range-slider__value")!="0"
                        div(class="range-slider")!="Key"
                            select(name="keywaydown" type="text" id="keywaydown" class="form-control" style="border-color:#3d9dcb;margin-bottom:10px" placeholder="Select")
                                option(value="select key")!="None"
                                option(value="1")!="1"
                                option(value="2")!="2"
                                option(value="3")!="3"
                                option(value="4")!="4"
                                option(value="5")!="5"
                                option(value="6")!="6"
                                option(value="7")!="7"
                                option(value="8")!="8"
                                option(value="9")!="9"
                                option(value="10")!="10"
                                option(value="11")!="11"
                        div(class="range-slider")!="Liveness"
                          input(class="range-slider__range" type="range" value="50" min="0" max="100" id="livewaydown" name="livewaydown")
                          span(class="range-slider__value")!="0"
                        div(class="range-slider")!="Mode"
                            select(name="modewaydown" type="text" id="modewaydown" class="form-control" style="border-color:#3d9dcb;margin-bottom:10px" placeholder="Select")
                                option(value="select playlist")!="None"
                                option(value="2oCyYrRD8DY0j1ZAqYumCb")!="Minor"
                                option(value="4LWi7L69VzdLavE6TgQcm9")!="Major"
                        div(class="range-slider")!="Speechiness"
                          input(class="range-slider__range" type="range" value="40" min="0" max="100" id="speechwaydown" name="speechwaydown")
                          span(class="range-slider__value")!="0"
                        div(class="range-slider")!="Valence"
                          input(class="range-slider__range" type="range" value="40" min="0" max="100" id="valencewaydown" name="valencewaydown")
                          span(class="range-slider__value")!="0"

    script.
        var bearer = "Bearer " + "#{access_token}";
        // find template and compile it
        var templateSource = document.getElementById('results-template').innerHTML,
            template = Handlebars.compile(templateSource),
            resultsPlaceholder = document.getElementById('resultsss'),
            playingCssClass = 'playing',
            noplayingClass = "cannotplay",
            audioObject = null,
            templateSourceplay = document.getElementById('playlistres-template').innerHTML,
            templateplay = Handlebars.compile(templateSourceplay),
            playlistresPlaceholder = document.getElementById('playlistres'),
            templateSourceplayedit = document.getElementById('playlistedit-template').innerHTML;
            templateedit = Handlebars.compile(templateSourceplayedit),
            editPlaceholder = document.getElementById('playlistedit');

        var fetchTracks = function (albumId, callback) {
            $.ajax({
                url: 'https://api.spotify.com/v1/albums/' + albumId,
                headers: {'Authorization': bearer},
                success: function (response) {
                    callback(response);
                }
            });
        };

        var fetchAudioFeature = function (trackId) {
            $.ajax({
                url: 'https://api.spotify.com/v1/audio-features/' + trackId,
                headers: {'Authorization': bearer},
                success: function (features) {
                    console.log("success audio: " + features);
                    //audPlaceholder.innerHTML = templateaud(features);
            var feat = "";
            feat +="Danceability: " + features.danceability + "/r";
            feat +="Energy: " + features.energy + "/r";
            feat +="Loudness: " + features.loudness + "/r";
            feat +="Mode: " + features.mode + "/r";
            feat +="Speechiness: " + features.speechiness + "/r";
            feat +="Acousticness: " + features.acousticness + "/r";
            feat +="Instrumentalness: " + features.instrumentalness + "/r";
            feat +="Liveness: " + features.liveness + "/r";
            feat +="Valence: " + features.valence + "/r";
            feat +="Tempo: " + features.tempo + "/r";
            console.log("features: " + feat);
            //var findtrack = '#'+trackId;
            //$("#results").find(findtrack).append(feat);
            //console.debug($("#results"));
            //console.debug($("#results").find(findtrack));

                }
            });
        };

        var searchAlbums_ = function (query) {
            console.log("looking for albums");
            console.log("access: " + bearer);
            $.ajax({
                url: 'https://api.spotify.com/v1/search',
                headers: {'Authorization': bearer},
                data: {
                    q: query,
                    type: 'album,track,artist'
                },
                success: function (response) {
                    resultsPlaceholder.innerHTML = template(response);
                    console.log("success albums: " + resultsPlaceholder.innerHTML);
                    console.dir(response);
                }
            });
        };

        var searchAlbums = function (query) {
            console.log("looking for albums");
            console.log("access: " + bearer);
            $.ajax({
                url: 'https://api.spotify.com/v1/search',
                headers: {'Authorization': bearer},
                data: {
                    q: query,
                    type: 'album,track,artist'
                },
                success: function (response) {
                    resultsPlaceholder.innerHTML = template(response);
                    console.log("success albums: " + resultsPlaceholder.innerHTML);
                    console.dir(response);

                    var trackids = "";
                    var i=0;
                    /*$( "div[data-track-id]" ).each(function(){
                        if(i>0){
                        trackids += ",";
                        }
                        trackids += $(this).attr( 'data-track-id' );
                        
                        i++;
                    });*/
                        //var testdata = $(this).data('test');
                        for(var track in response.tracks.items){
                        if(i>0){
                        trackids += ",";
                        }
                        trackids += response.tracks.items[i].id;
                        i++;
                        }
                        console.dir(response.tracks.items);
                        console.log("looking for trackids: " + trackids);
                        

                                $.ajax({
                                    url: 'https://api.spotify.com/v1/audio-features?ids=' + trackids,
                                    headers: {'Authorization': bearer},
                                    success: function (features) {
                                        console.log("success audio: " + features);
                                        console.dir(features);
                                        //audPlaceholder.innerHTML = templateaud(features);
                                        var j = 0;
                                for(var featur in features.audio_features){
                                var feat = "";
                                var feature = features.audio_features[j];
                                feat +="<b>Danceability</b>: " + feature.danceability + "<br>";
                                feat +="<b>Energy</b>: " + feature.energy + "<br>";
                                feat +="<b>Loudness</b>: " + feature.loudness + "<br>";
                                feat +="<b>Mode</b>: " + feature.mode + "<br>";
                                feat +="<b>Speechiness</b>: " + feature.speechiness + "<br>";
                                feat +="<b>Acousticness</b>: " + feature.acousticness + "<br>";
                                feat +="<b>Instrumentalness</b>: " + feature.instrumentalness + "<br>";
                                feat +="<b>Liveness</b>: " + feature.liveness + "<br>";
                                feat +="<b>Valence</b>: " + feature.valence + "<br>";
                                feat +="<b>Tempo</b>: " + feature.tempo;
                                console.log("feature: " + feat);
                                var findtrack = '#' + feature.id;
                                //$("#title-"+feature.id).attr("data-tooltip",feat);
                                $("#title-"+feature.id).html(feat);
                                console.dir($("#title-"+feature.id));
                                //console.debug($("#results").find(findtrack));
                                j++;
                                }

                                    }
                                });

                        //$(this).val(testdata);

                        console.log( "ready!" );
                }
            });
        };

        var searchPlaylists = function () {
            console.log("looking for playlists");
            console.log("access token in playlists: " + bearer);
            $.ajax({
                url: 'https://api.spotify.com/v1/me/playlists',
                headers: {'Authorization': bearer},
                success: function (response) {
                    playlistresPlaceholder.innerHTML = templateplay(response);
                    //editPlaceholder.innerHTML = templateedit(response);
                    console.log("success get playlist.");
                }
            });
        };

        var searchPlaylistsEdit = function () {
            console.log("looking for playlists");
            console.log("access token in playlists: " + bearer);
            $.ajax({
                url: 'https://api.spotify.com/v1/me/playlists',
                headers: {'Authorization': bearer},
                success: function (response) {
                    //playlistresPlaceholder.innerHTML = templateplay(response);
                    editPlaceholder.innerHTML = templateedit(response);
                    console.log("success get playlist.");
                }
            });
        };

        resultsss.addEventListener('click', function (e) {
            var target = e.target;
            if (target !== null && target.classList.contains('cover')) {
                if (target.classList.contains(playingCssClass)) {
                    audioObject.pause();
                } else {
                    if (audioObject) {
                        audioObject.pause();
                    }
                    fetchTracks(target.getAttribute('data-album-id'), function (data) {
                        var preview = data.tracks.items[0].preview_url;
                        if(preview != null){
                        audioObject = new Audio(preview);
                        audioObject.play();
                        target.classList.add(playingCssClass);
                        audioObject.addEventListener('ended', function () {
                            target.classList.remove(playingCssClass);
                        });
                        audioObject.addEventListener('pause', function () {
                            target.classList.remove(playingCssClass);
                        });
                        } else {
                            target.classList.add(noplayingClass);
                        }
                    });
                }
            }
        });

        Handlebars.registerHelper('trimString', function(passedString) {
        console.log("before trimstring");
            var len = passedString.length;
            var add = "";
            if(len > 24){
                add = "...";
            }
            var theString = passedString.substring(0,25) + add;
            
            console.log("theString is: " + theString);
            return new Handlebars.SafeString(theString)
        });

        Handlebars.registerHelper('test', function(trackid) {
            console.log("before fetch audio features");
            var i = fetchAudioFeature(trackid);
            console.log("I is: " + i);
            return new Handlebars.SafeString(i);
        });

        Handlebars.registerHelper('displayTitle', function(features) {
            var feat = "";
            feat +="Danceability: " + features.danceability + "/r";
            feat +="Energy: " + features.energy + "/r";
            feat +="Loudness: " + features.loudness + "/r";
            feat +="Mode: " + features.mode + "/r";
            feat +="Speechiness: " + features.speechiness + "/r";
            feat +="Acousticness: " + features.acousticness + "/r";
            feat +="Instrumentalness: " + features.instrumentalness + "/r";
            feat +="Liveness: " + features.liveness + "/r";
            feat +="Valence: " + features.valence + "/r";
            feat +="Tempo: " + features.tempo + "/r";
            console.log("features: " + feat);
            return new Handlebars.SafeString(feat)
        });

        document.getElementById('search-form').addEventListener('submit', function (e) {
            e.preventDefault();
            //document.getElementById('addtoplaylist').style.display = "block";
            searchAlbums(document.getElementById('query').value);
            searchPlaylists();
        }, false);

        searchPlaylistsEdit();

        var rangeSlider = function(){
        var slider = $('.range-slider'),
              range = $('.range-slider__range'),
              value = $('.range-slider__value');
            
          slider.each(function(){

            value.each(function(){
              var value = $(this).prev().attr('value');
              $(this).html(value/100);
            });

            range.on('input', function(){
                var val = this.value;
              $(this).next(value).html(val/100);
            });
          });
        };

        rangeSlider();

        if($('.sectiontracks').is(':visible')) {
          var h = $( ".sectionalbums" ).height() + $( ".sectionartists" ).height() + $( ".sectiontracks" ).height();
          console.log("add music height: " + h);
          $(".expandadd").height(h);
        };

